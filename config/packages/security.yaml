security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # User providers to load user data from various sources
    providers:
        users_in_memory:
            memory: null  # In-memory user storage for simplicity, replace with database provider for production
        database_users:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: database_users  # Use database provider for main firewall

            # Activate different ways to authenticate
            form_login:
                login_path: login
                check_path: login
                default_target_path: /dashboard
                always_use_default_target_path: true
                username_parameter: email
                password_parameter: password

            logout:
                path: logout
                target: /

            # Enable anonymous access for initial setup
            anonymous: true

            # Enable user impersonation
            switch_user:
                role: ROLE_ADMIN  # Only allow admins to impersonate users

    # Access control rules for various paths
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4  # Lowest possible value for bcrypt
                time_cost: 3  # Lowest possible value for argon
                memory_cost: 10  # Lowest possible value for argon
